p2.m <- as.data.frame(p2.m)
cbind(p2.m, id=rep(p1, idx))
}
read_jdbaba("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
text <- " 8  02-Model (Minimum)
250.04167175293	 17.4996566772461
250.08332824707	 17.5000038146973
250.125	 17.5008907318115
250.16667175293	 17.5011672973633
250.20832824707	 17.5013771057129
250.25	 17.502140045166
250.29167175293	 17.5025615692139
250.33332824707	 17.5016822814941
7 	03 (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
8 	04-Model (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
250.33332824707	 17.5055828094482"
text
text <- read.table(" 8  02-Model (Minimum)
250.04167175293	 17.4996566772461
250.08332824707	 17.5000038146973
250.125	 17.5008907318115
250.16667175293	 17.5011672973633
250.20832824707	 17.5013771057129
250.25	 17.502140045166
250.29167175293	 17.5025615692139
250.33332824707	 17.5016822814941
7 	03 (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
8 	04-Model (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
250.33332824707	 17.5055828094482",sep="\t",header=F)
text <- read.table(" 8  02-Model (Minimum)
250.04167175293	 17.4996566772461
250.08332824707	 17.5000038146973
250.125	 17.5008907318115
250.16667175293	 17.5011672973633
250.20832824707	 17.5013771057129
250.25	 17.502140045166
250.29167175293	 17.5025615692139
250.33332824707	 17.5016822814941
7 	03 (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
8 	04-Model (Maximum)
250.04167175293	 17.5020561218262
250.08332824707	 17.501148223877
250.125	 17.501127243042
250.16667175293	 17.5012378692627
250.20832824707	 17.5016021728516
250.25	 17.5024681091309
250.29167175293	 17.5043239593506
250.33332824707	 17.5055828094482",sep="\t",header=F)
read_jdbaba("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
read_jdbaba("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
read_jdbaba("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
traceback()
?readLines
readFile <- function(file)
{
con <- readLines(file)
n <- length(con)
i <- 1
chunks <- list()
while(i < n)
{
l <- con[i]
type <- scan(text=con[i], what=character(2), sep="\t")
nlines <- as.numeric(type[1])
dat <- cbind(read.delim(text=con[i+seq_len(nlines)], header=FALSE),
type=type[2])
chunks <- c(chunks, list(dat))
i <- i + nlines + 1
}
do.call(rbind, chunks)
}
readFile("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
readLines(con="J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
readLines(con="J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
readFile("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
readFile(con="J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
readFile <- function(file)
{
con <- readLines(file)
n <- length(con)
i <- 1
chunks <- list()
while(i < n)
{
l <- con[i]
type <- scan(text=con[i], what=character(2), sep="\t")
nlines <- as.numeric(type[1])
dat <- cbind(read.delim(text=con[i+seq_len(nlines)], header=FALSE),
type=type[2])
chunks <- c(chunks, list(dat))
i <- i + nlines + 1
}
do.call(rbind, chunks)
}
rm(list=ls())
myFun <- function(textfile) {
x <- readLines(textfile)
myMatch <- grep("^\\s[0-9]+\\s+[0-9]+", x)
scanVals <- as.numeric(gsub("^\\s+([0-9]+)\\s+.*", "\\1", x[myMatch]))
temp <- lapply(seq_along(myMatch), function(y) {
t1 <- matrix(scan(textfile, skip = myMatch[y],
n = scanVals[y]*2), ncol = 2, byrow = TRUE)
colnames(t1) <- c("time", "value")
cbind(data.frame(t1),
name = gsub("^\\s+([0-9]+)\\s+(.*)", "\\2",
x[myMatch])[y])
})
temp
}
myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
do.call(rbind,myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt"))
nn<-do.call(rbind,myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt"))
nn
readFile <- function(file)
{
con <- readLines(file)
i <- 1
chunks <- list()
while(i < length(con))
{
type <- scan(text=con[i], what=character(2), sep="\t")
nlines <- as.numeric(type[1])
dat <- cbind(read.delim(text=con[i+seq_len(nlines)], header=FALSE),
type=type[2])
chunks <- c(chunks, list(dat))
i <- i + nlines + 1
}
do.call(rbind, chunks)
}
readFile("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
?grep
x <- readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
myMatch <- grep("^\\s[0-9]+\\s+[0-9]+", x)
myMatch
scanVals <- as.numeric(gsub("^\\s+([0-9]+)\\s+.*", "\\1", x[myMatch]))
fix(scanVals)
?seq_along
x[myMatch]
myMatch
x
myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
myFun("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
scanVals <- as.numeric(gsub("^\\s+([0-9]+)\\s+.*", "\\1", x[myMatch]))
scanVals
readFile <- function(file)
{
con <- readLines(file)
i <- 1
chunks <- list()
while(i < length(con))
{
type <- scan(text=con[i], what=character(2), sep="\t")
nlines <- as.numeric(type[1])
dat <- cbind(read.delim(text=con[i+seq_len(nlines)], header=FALSE),
type=type[2])
chunks <- c(chunks, list(dat))
i <- i + nlines + 1
}
do.call(rbind, chunks)
}
readFile(con="J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/jdtrial.txt")
readFile(con="J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
myMatch <- grep("^\\s[0-9]+*", x)
myMatch <- grep("^\\s[0-9]+.*", x)
myMatch
scanVals
gsub("^\\s+([0-9]+)\\s+.*", "\\1", x[myMatch])
traceback()
gsub("^\\s+([0-9]+)\\s+.*", "\\1", x[myMatch])
?gsub
x
gsub("^\\s+([0-9]+)\\s+.*", "\\1", x)
x <- readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
tt <- readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
idx <- grep("^",tt)
idx
idx <- grep("^\\",tt)
idx <- grep("^\\s",tt)
idx
myMatch <- grep("^\\s[0-9]+\\s+[0-9]+", x)
myMatch
x <- readLines("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt")
myMatch <- grep("^\\s[0-9]+\\s+[0-9]+", x)
myMatch
p1 <- tt[idx]
p1
p2 <- tt[setdiff(seq_along(tt),idx)]
p2
idx <- diff(c(idx,length(tt)+1))-1
idx
strsplit(p2,"[]+")
strsplit(p2,"[ ]+")
idx
?setdiff
library(zoo)
DF <- read.table("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt",fill=TRUE,as.is=TRUE)
is.hdr <- DF$V3 !=""
is.hdr
?is.hdr
?hdr
?hdr
head(DF)
transform(DF,V2=as.numeric(replace(V2,is.hdr,NA)),
V3= na.locf(ifelse(is.hdr,V2,NA)),
name=na.locf(ifelse(is.hdr,V3,NA)))[!is.hdr,]
DF <- read.table("J:/1.3.2013 roughness 0.02 4 layers bathymetry modified near calibration pionts/trial2.txt",fill=TRUE,as.is=TRUE)
head(DF)
DF
?na.locf
?seq >example(seq)
example(seq)
example(nchar)
example(jday)
library(quicktoolsr)
example(jday)
library(stringr)
?stringr
?strsplit
example(strsplit)
strsplit
example(grep)
vignette("xts")
library(xts)
?xts
example(xts)
head(sample.xts)
example(apply.daily)
example(apply.daily)
apply.quarterly
example(apply.quarterly)
example(as.xts.data.frame)
example(endpoints)
head(sample_matrix)
example(na.locf)
?split
example(split)
library(quicktoolsr)
?condtosal
library(devtools)
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
build("C:/Users/janesh/Documents/quicktoolsr/",vignettes=TRUE)
check("C:/Users/janesh/Documents/quicktoolsr/")
install("C:/Users/janesh/Documents/quicktoolsr/")
library(quicktoolsr)
?condtosal
library(quicktoolsr)
?condtosal
load_all("C:/Users/janesh/Documents/quicktoolsr/")
library(devtools)
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
build("C:/Users/janesh/Documents/quicktoolsr/",vignettes=TRUE)
install("C:/Users/janesh/Documents/quicktoolsr/")
library(devtools)
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
build("C:/Users/janesh/Documents/quicktoolsr/",vignettes=TRUE)
install("C:/Users/janesh/Documents/quicktoolsr/")
library(quicktoolsr)
?condtosal
?roxygen
?devtools
library(devtools)
?devtools
library(roxygen)
library(roxygen2)
?roxygen
?quicktools
?quicktoolsr
x<-4L
class(x)
x <- c(4, "a", TRUE)
class(x)
y <- c(4, "a", TRUE)
class(y)
x <- (1,"a","c",3)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x <- 1:4
y <- 2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5]<-0
x
formatC(seq(0.1, 0.9, by = 0.1), digits = 20)
formula <- rainfall ~ seeding * + (sne+cloudcover + prewetness+echomotion)+time
data(clouds)
head(clouds)
mad
formals(mad)
environment(mad)
body(mad)
dput(formals(mad))
!
%in%
search()
library(ggplot2)
U <-  0.425 #m/s
D <- 1     # m2/s
t <- 360   # seconds
# Define the range of x
x <- seq(from=0,by=0.5,length=1000)
# A function for the error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
## A function equivalent to the function above
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
## Comparing the output from two functions
plot(my(x),jd(x),type="b",pch=19)
## Complementary error funciton
ef1 <- 1-jd((x+U*t)/sqrt(4*D*t))
hello1 <- (x-U*t)/sqrt(4*D*t)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
## PLot the concentration vs distance
qplot(x,conc, xlab="Distance (m)",ylab="Concentration")
onedimdye <- function(U,D,t) {
x <- seq(from=0,by=0.5,length=1000)
## Error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
ef1 <- 1-jd((x+U*t)/sqrt(4*D*t))
hello1 <- (x-U*t)/sqrt(4*D*t)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
return(conc)
}
onedimdye
onedimdye(U <-  0.425 #m/s
D <- 1     # m2/s
onedimdye(U =0.425, D=1, t=360) #m/s
conc1 <- onedimdye(U =0.425, D=1, t=360) #m/s
x <- seq(from=0,by=0.5,length=1000)
plot(x,conc1)
onedimdye <- function(U,D,t) {
## Error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
ef1 <- 1-jd((x+U*t)/sqrt(4*D*t))
hello1 <- (x-U*t)/sqrt(4*D*t)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
return(conc)
}
conc1 <- onedimdye(U =0.425, D=1, t=360) #m/s
plot(x,conc1)
plot(x,conc1)
conc1 <- onedimdye(U =0.425, D=1, t=360,x) #m/s
onedimdye <- function(U,D,t,x) {
## Error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
ef1 <- 1-jd((x+U*t)/sqrt(4*D*t))
hello1 <- (x-U*t)/sqrt(4*D*t)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
return(conc)
}
conc1 <- onedimdye(U =0.425, D=1, t=360) #m/s
x <- seq(from=0,by=0.5,length=1000)
conc1 <- onedimdye(U =0.425, D=1, t=360) #m/s
conc1 <- onedimdye(U =0.425, D=1, t=360, x) #m/s
plot(x,conc1)
onedimdye <- function(U,D,tt,x) {
## Error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
ef1 <- 1-jd((x+U*t)/sqrt(4*D*tt))
hello1 <- (x-U*t)/sqrt(4*D*tt)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
return(conc)
}
conc1 <- onedimdye(U =0.425, D=1, t=360, x) #m/s
conc1 <- onedimdye(U =0.425, D=1, tt=360, x) #m/s
onedimdye <- function(U,D,tt,x) {
## Error function
jd <- function(x) 2*pnorm(sqrt(2)*x)-1
my <- function(x){
ax = x
p = 0.3275911
t = 1 / (1 + p * ax)
a1 = 0.254829592
a2 = -0.284496736
a3 = 1.421413741
a4 = -1.453152027
a5 = 1.061405429
ex = 1 - (a1 * t + a2 * t ^ 2 + a3 * t ^ 3 + a4 * t ^ 4 + a5 * t ^ 5) * exp(-ax ^ 2)
return(ex)
}
ef1 <- 1-jd((x+U*tt)/sqrt(4*D*tt))
hello1 <- (x-U*tt)/sqrt(4*D*tt)
hello3 <- ifelse(hello1<0,1+jd(abs(hello1)),1-jd(hello1))
## Concentration values at (x,t)
conc <- ifelse(ef1<=0,0.5*hello3,0.5 * ((exp(U * x / D) * ef1) + hello3))
return(conc)
}
conc1 <- onedimdye(U =0.425, D=1, tt=360, x) #m/s
plot(x,conc1)
library(devtools)
setwd("C:/Users/janesh/Documents/quicktoolsr/")
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
library(devtools)
setwd("C:/Users/janesh/Documents/quicktoolsr/")
load_all("C:/Users/janesh/Documents/quicktoolsr/")
document("C:/Users/janesh/Documents/quicktoolsr/")
check("C:/Users/janesh/Documents/quicktoolsr/")
install("C:/Users/janesh/Documents/quicktoolsr/")
